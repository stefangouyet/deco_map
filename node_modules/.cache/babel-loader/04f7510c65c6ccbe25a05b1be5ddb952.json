{"ast":null,"code":"var _jsxFileName = \"/Users/stefan.gouyet2/Documents/Projects/Mapbox/deco_map/src/App.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom'; //import Geocoder from \"react-map-gl-geocoder\";\n\nimport MapGL, { Source, Layer, Marker, NavigationControl, Popup, FlyToInterpolator } from 'react-map-gl';\nimport ControlPanel from './components/control-panel';\nimport buildings from './data/deco_buildings.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBiking, faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport BuildingInfo from './components/BuildingInfo';\nconst mapStyle = \"mapbox://styles/stefangouyet/ck8v4xh0j20001jm6a1wlo41g\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    };\n    this.mapRef = React.createRef();\n\n    this._onViewportChange = viewport => this.setState({\n      viewport: { ...this.state.viewport,\n        ...viewport\n      }\n    });\n\n    this._goToViewport = ({\n      longitude,\n      latitude\n    }) => {\n      this._onViewportChange({\n        longitude,\n        latitude,\n        zoom: 11,\n        transitionInterpolator: new FlyToInterpolator({\n          speed: 1.2\n        }),\n        transitionDuration: 'auto'\n      });\n    };\n\n    this.handleViewportChange = viewport => {\n      this.setState({\n        viewport: { ...this.state.viewport,\n          ...viewport\n        }\n      });\n    };\n\n    this._onClickMarker = building => {\n      this.setState({\n        popupInfo: building\n      });\n      console.log('set');\n      console.log(building);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: buildings\n    });\n  }\n\n  _renderPopup() {\n    const {\n      popupInfo\n    } = this.state;\n\n    const filterBuilding = (data, building) => {\n      const features = data.features.filter(feature => {\n        return feature.properties['Building Name'] === building;\n      });\n      return {\n        type: 'FeatureCollection',\n        features\n      };\n    };\n\n    const buildingData = filterBuilding(this.state.data, popupInfo); // console.log('stefan')\n    // console.log(buildingData)\n    // console.log(buildingData.features[0])\n\n    return popupInfo && /*#__PURE__*/React.createElement(Popup, {\n      tipSize: 1,\n      anchor: \"top\",\n      latitude: buildingData.geometry.coordinates[1],\n      longitude: buildingData.geometry.coordinates[0],\n      closeOnClick: false,\n      onClose: () => this.setState({\n        buildingData: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./public/Chrysler_Building_eagle.jpg\",\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })));\n  }\n\n  render() {\n    const {\n      viewport,\n      settings\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MapGL, Object.assign({}, viewport, {\n      width: \"100vw\",\n      height: \"100vh\",\n      ref: this.mapRef\n    }, viewport, {\n      onViewportChange: this.handleViewportChange,\n      mapStyle: mapStyle,\n      mapboxApiAccessToken: 'pk.eyJ1Ijoic3RlZmFuZ291eWV0IiwiYSI6ImNrNzlqbm8ycTA5bXUzbXFyMWZreGMxb24ifQ.hGYafiv-Xt5DXaUZgz4M8Q',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), this.state.data && this.state.data.features.map(building => /*#__PURE__*/React.createElement(Marker, {\n      key: building.properties.year,\n      latitude: building.geometry.coordinates[1],\n      longitude: building.geometry.coordinates[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrophy,\n      size: \"1x\",\n      color: \"black\",\n      onClick: e => {\n        //this._onClickMarker(building.properties['Building Name'])}\n        e.preventDefault();\n        console.log(building);\n        this.setState({\n          selectedBuilding: building\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), this._renderPopup())), this.state.selectedBuilding ? /*#__PURE__*/React.createElement(Popup, {\n      latitude: this.state.selectedBuilding.features[0].geometry.coordinates[1],\n      longitude: this.state.selectedBuilding.features[0].geometry.coordinates[0],\n      closeOnClick: false,\n      onClose: () => this.setState({\n        selectedBuilding: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"s\")) : null, /*#__PURE__*/React.createElement(ControlPanel, {\n      containerComponent: this.props.containerComponent,\n      onViewportChange: this._goToViewport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stefan.gouyet2/Documents/Projects/Mapbox/deco_map/src/App.js"],"names":["React","Component","render","MapGL","Source","Layer","Marker","NavigationControl","Popup","FlyToInterpolator","ControlPanel","buildings","FontAwesomeIcon","faBiking","faTrophy","BuildingInfo","mapStyle","App","state","viewport","latitude","longitude","zoom","bearing","pitch","popupInfo","mapRef","createRef","_onViewportChange","setState","_goToViewport","transitionInterpolator","speed","transitionDuration","handleViewportChange","_onClickMarker","building","console","log","componentDidMount","data","_renderPopup","filterBuilding","features","filter","feature","properties","type","buildingData","geometry","coordinates","settings","height","map","year","e","preventDefault","selectedBuilding","props","containerComponent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {render} from 'react-dom';\n//import Geocoder from \"react-map-gl-geocoder\";\nimport MapGL, {Source, Layer,Marker,NavigationControl,Popup,FlyToInterpolator} from 'react-map-gl';\n\nimport ControlPanel from './components/control-panel';\nimport buildings from './data/deco_buildings.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faBiking, faTrophy} from '@fortawesome/free-solid-svg-icons';\nimport BuildingInfo from './components/BuildingInfo';\n\nconst mapStyle=\"mapbox://styles/stefangouyet/ck8v4xh0j20001jm6a1wlo41g\"\n\nclass App extends Component {\n  state = {\n    viewport: {\n      latitude: 37.7751,\n      longitude: -122.4193,\n      zoom: 11,\n      bearing: 0,\n      pitch: 0\n    },\n    popupInfo: null\n  };\n\n  componentDidMount() {\n    this.setState({\n      data: buildings\n    })\n  };\n\n  mapRef = React.createRef();\n\n  _onViewportChange = viewport =>\n    this.setState({\n      viewport: {...this.state.viewport, ...viewport}\n    });\n\n  _goToViewport = ({longitude, latitude}) => {\n    this._onViewportChange({\n      longitude,\n      latitude,\n      zoom: 11,\n      transitionInterpolator: new FlyToInterpolator({speed: 1.2}),\n      transitionDuration: 'auto'\n    });\n  };\n\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  };\n\n  _onClickMarker = building => {\n    this.setState({popupInfo: building});\n    console.log('set')\n    console.log(building)\n  };\n\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    const filterBuilding =(data, building) => {\n      const features = data.features.filter(feature => {\n        return (\n            feature.properties['Building Name'] === building\n        )})\n        return {type: 'FeatureCollection', features};\n    };\n\n    const buildingData = filterBuilding(this.state.data,popupInfo);\n\n    // console.log('stefan')\n    // console.log(buildingData)\n\n    // console.log(buildingData.features[0])\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={1}\n          anchor=\"top\"\n          latitude={buildingData.geometry.coordinates[1]}\n          longitude={buildingData.geometry.coordinates[0]}\n          closeOnClick={false}\n          onClose={() => this.setState({buildingData: null})}\n        >\n          {/* <BuildingInfo info={buildingData} /> */}\n          <button>\n            <img src = './public/Chrysler_Building_eagle.jpg' alt='icon' />\n          </button>\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    const {viewport, settings} = this.state;\n\n    return (\n      <div style={{height: '100%'}}>\n        <MapGL\n           {...viewport}\n           width=\"100vw\"\n           height=\"100vh\"\n           ref = {this.mapRef}\n           {...viewport}\n           onViewportChange={this.handleViewportChange}\n           mapStyle={mapStyle}\n           mapboxApiAccessToken={'pk.eyJ1Ijoic3RlZmFuZ291eWV0IiwiYSI6ImNrNzlqbm8ycTA5bXUzbXFyMWZreGMxb24ifQ.hGYafiv-Xt5DXaUZgz4M8Q'}\n          \n        >\n          {this.state.data && this.state.data.features.map(building =>\n            <Marker\n            key = {building.properties.year}\n            latitude={building.geometry.coordinates[1]}\n            longitude={building.geometry.coordinates[0]}\n            >\n              <FontAwesomeIcon \n              icon={faTrophy} \n              size='1x' \n              color='black' \n              onClick={e => {//this._onClickMarker(building.properties['Building Name'])}\n                          e.preventDefault();\n                          console.log(building)\n                          this.setState({selectedBuilding:building})\n          }}\n              />\n              {this._renderPopup()}\n            </Marker>\n          )}\n\n          {this.state.selectedBuilding ? (\n            <Popup\n            latitude={this.state.selectedBuilding.features[0].geometry.coordinates[1]}\n            longitude={this.state.selectedBuilding.features[0].geometry.coordinates[0]}\n            closeOnClick={false}\n            onClose={() => this.setState({selectedBuilding: null})}>\n              <div>\n                s\n              </div>\n            </Popup>\n          ) : null\n        }\n        <ControlPanel\n          containerComponent={this.props.containerComponent}\n          onViewportChange={this._goToViewport}\n        />\n        </MapGL>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}