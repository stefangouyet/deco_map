{"ast":null,"code":"var _jsxFileName = \"/Users/stefan.gouyet2/Documents/Projects/Mapbox/deco_map/carte-deco/src/App.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom'; //import Geocoder from \"react-map-gl-geocoder\";\n\nimport MapGL, { Source, Layer, Marker, NavigationControl, Popup, FlyToInterpolator } from 'react-map-gl';\nimport ControlPanel from './components/control-panel';\nimport buildings from './data/deco_buildings.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBiking, faTrophy } from '@fortawesome/free-solid-svg-icons';\nconst mapStyle = \"mapbox://styles/stefangouyet/ck8v4xh0j20001jm6a1wlo41g\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    };\n    this.mapRef = React.createRef();\n\n    this._onViewportChange = viewport => this.setState({\n      viewport: { ...this.state.viewport,\n        ...viewport\n      }\n    });\n\n    this._goToViewport = ({\n      longitude,\n      latitude\n    }) => {\n      this._onViewportChange({\n        longitude,\n        latitude,\n        zoom: 11,\n        transitionInterpolator: new FlyToInterpolator({\n          speed: 1.2\n        }),\n        transitionDuration: 'auto'\n      });\n    };\n\n    this.handleViewportChange = viewport => {\n      this.setState({\n        viewport: { ...this.state.viewport,\n          ...viewport\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: buildings\n    });\n  }\n\n  _renderPopup() {\n    const {\n      popupInfo\n    } = this.state;\n    return popupInfo && /*#__PURE__*/React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CityInfo, {\n      info: popupInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  render() {\n    const {\n      viewport,\n      settings\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MapGL, Object.assign({}, viewport, {\n      width: \"100vw\",\n      height: \"100vh\",\n      ref: this.mapRef\n    }, viewport, {\n      onViewportChange: this.handleViewportChange,\n      mapStyle: mapStyle,\n      mapboxApiAccessToken: 'pk.eyJ1Ijoic3RlZmFuZ291eWV0IiwiYSI6ImNrNzlqbm8ycTA5bXUzbXFyMWZreGMxb24ifQ.hGYafiv-Xt5DXaUZgz4M8Q',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), this.state.data && this.state.data.features.map(building => /*#__PURE__*/React.createElement(Marker, {\n      key: building.properties.year,\n      latitude: building.geometry.coordinates[1],\n      longitude: building.geometry.coordinates[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrophy,\n      size: \"1x\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ControlPanel, {\n      containerComponent: this.props.containerComponent,\n      onViewportChange: this._goToViewport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stefan.gouyet2/Documents/Projects/Mapbox/deco_map/carte-deco/src/App.js"],"names":["React","Component","render","MapGL","Source","Layer","Marker","NavigationControl","Popup","FlyToInterpolator","ControlPanel","buildings","FontAwesomeIcon","faBiking","faTrophy","mapStyle","App","state","viewport","latitude","longitude","zoom","bearing","pitch","popupInfo","mapRef","createRef","_onViewportChange","setState","_goToViewport","transitionInterpolator","speed","transitionDuration","handleViewportChange","componentDidMount","data","_renderPopup","settings","height","features","map","building","properties","year","geometry","coordinates","props","containerComponent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {render} from 'react-dom';\n//import Geocoder from \"react-map-gl-geocoder\";\nimport MapGL, {Source, Layer,Marker,NavigationControl,Popup,FlyToInterpolator} from 'react-map-gl';\n\nimport ControlPanel from './components/control-panel';\nimport buildings from './data/deco_buildings.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faBiking, faTrophy} from '@fortawesome/free-solid-svg-icons';\n\nconst mapStyle=\"mapbox://styles/stefangouyet/ck8v4xh0j20001jm6a1wlo41g\"\n\nclass App extends Component {\n  state = {\n    viewport: {\n      latitude: 37.7751,\n      longitude: -122.4193,\n      zoom: 11,\n      bearing: 0,\n      pitch: 0\n    },\n    popupInfo: null\n  };\n\n  componentDidMount() {\n    this.setState({\n      data: buildings\n    })\n  };\n\n  mapRef = React.createRef();\n\n  _onViewportChange = viewport =>\n    this.setState({\n      viewport: {...this.state.viewport, ...viewport}\n    });\n\n  _goToViewport = ({longitude, latitude}) => {\n    this._onViewportChange({\n      longitude,\n      latitude,\n      zoom: 11,\n      transitionInterpolator: new FlyToInterpolator({speed: 1.2}),\n      transitionDuration: 'auto'\n    });\n  };\n\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  };\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <CityInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    const {viewport, settings} = this.state;\n\n    return (\n      <div style={{height: '100%'}}>\n        <MapGL\n           {...viewport}\n           width=\"100vw\"\n           height=\"100vh\"\n           ref = {this.mapRef}\n           {...viewport}\n           onViewportChange={this.handleViewportChange}\n           mapStyle={mapStyle}\n           mapboxApiAccessToken={'pk.eyJ1Ijoic3RlZmFuZ291eWV0IiwiYSI6ImNrNzlqbm8ycTA5bXUzbXFyMWZreGMxb24ifQ.hGYafiv-Xt5DXaUZgz4M8Q'}\n          \n        >\n          {this.state.data && this.state.data.features.map(building =>\n            <Marker\n            key = {building.properties.year}\n            latitude={building.geometry.coordinates[1]}\n            longitude={building.geometry.coordinates[0]}\n            >\n              <FontAwesomeIcon icon={faTrophy} size='1x' color='black' />\n            </Marker>\n\n          )}\n        <ControlPanel\n          containerComponent={this.props.containerComponent}\n          onViewportChange={this._goToViewport}\n        />\n        </MapGL>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}