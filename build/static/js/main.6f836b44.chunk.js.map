{"version":3,"sources":["images sync /^/.//.*/.jpg$","images/American Radiator Building.jpg","images/Chrysler Building.jpg","images/Chrysler_Building_eagle.jpg","images/Coit Tower.jpg","images/El Dorado.jpg","images/Empire State Building.jpg","images/General Electric Building.jpg","images/Rockefeller Plaza.jpg","images/The New Yorker.jpg","images/Waldorf Astoria.jpg","images/general_deco.jpg","components/control-panel.js","App.js","components/BuildingInfo.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ControlPanel","_renderButton","city","index","key","className","type","name","defaultChecked","onClick","props","onViewportChange","htmlFor","CITIES","this","PureComponent","App","state","viewport","latitude","longitude","zoom","bearing","pitch","popupInfo","mapRef","React","createRef","_onViewportChange","setState","_goToViewport","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","handleViewportChange","_onClickMarker","building","console","log","data","buildings","buildingData","features","filter","feature","properties","tipSize","anchor","geometry","coordinates","closeOnClick","onClose","src","alt","selectedBuilding","style","height","width","ref","mapStyle","mapboxApiAccessToken","year","icon","faTrophy","size","color","preventDefault","_renderPopup","require","containerComponent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o+EAAA,IAAIA,EAAM,CACT,mCAAoC,GACpC,0BAA2B,GAC3B,gCAAiC,GACjC,mBAAoB,GACpB,kBAAmB,GACnB,8BAA+B,GAC/B,kCAAmC,GACnC,0BAA2B,GAC3B,uBAAwB,GACxB,wBAAyB,GACzB,qBAAsB,IAIvB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBChCpBU,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,sICKtBC,E,4MACnBC,cAAgB,SAACC,EAAMC,GACrB,OACE,uBAAKC,IAAG,cAASD,GAASE,UAAU,SAClC,yBACEC,KAAK,QACLC,KAAK,OACLnB,GAAE,eAAUe,GACZK,eAA8B,aAAdN,EAAKA,KACrBO,QAAS,kBAAM,EAAKC,MAAMC,iBAAiBT,MAE7C,yBAAOU,QAAO,eAAUT,IAAUD,EAAKA,Q,uDAM3C,OACE,uBAAKG,UAAU,iBACb,6CACA,uBAAKA,UAAU,gBAEf,2BAECQ,EAAO5B,IAAI6B,KAAKb,oB,GAxBiBc,iB,wBCkL3BC,GCpL2BD,gB,kND4BxCE,MAAQ,CACNC,SAAU,CACRC,SAAU,QACVC,WAAY,SACZC,KAAM,GACNC,QAAS,EACTC,MAAO,GAETC,UAAW,M,EASbC,OAASC,IAAMC,Y,EAEfC,kBAAoB,SAAAV,GAAQ,OAC1B,EAAKW,SAAS,CACZX,SAAS,2BAAK,EAAKD,MAAMC,UAAaA,M,EAG1CY,cAAgB,YAA4B,IAA1BV,EAAyB,EAAzBA,UAAWD,EAAc,EAAdA,SAC3B,EAAKS,kBAAkB,CACrBR,YACAD,WACAE,KAAM,GACNU,uBAAwB,IAAIC,IAAkB,CAACC,MAAO,MACtDC,mBAAoB,U,EAKxBC,qBAAuB,SAAAjB,GACrB,EAAKW,SAAS,CACZX,SAAS,2BAAM,EAAKD,MAAMC,UAAaA,M,EAI3CkB,eAAiB,SAAAC,GACf,EAAKR,SAAS,CAACL,UAAWa,IAC1BC,QAAQC,IAAI,OACZD,QAAQC,IAAIF,I,kEAhCZvB,KAAKe,SAAS,CACZW,KAAMC,M,qCAmCM,IAGSD,EAAMH,EAHhB,OACNb,EAAaV,KAAKG,MAAlBO,UAUDkB,GARiBF,EAQa1B,KAAKG,MAAMuB,KARlBH,EAQuBb,EAHzC,CAAClB,KAAM,oBAAqBqC,SAJpBH,EAAKG,SAASC,QAAO,SAAAC,GACpC,OACIA,EAAQC,WAAW,mBAAqBT,OAYhD,OACEb,GACE,kBAAC,IAAD,CACEuB,QAAS,EACTC,OAAO,MACP7B,SAAUuB,EAAaC,SAAS,GAAGM,SAASC,YAAY,GACxD9B,UAAWsB,EAAaC,SAAS,GAAGM,SAASC,YAAY,GACzDC,cAAc,EACdC,QAAS,kBAAM,EAAKvB,SAAS,CAACa,aAAc,SAG5C,gCACE,yBAAKW,IAAM,uCAAuCC,IAAI,a,+BAOtD,IAAD,SAC8BxC,KAAKG,MAAnCC,EADA,EACAA,SAAUqC,EADV,EACUA,iBAEjB,OACE,yBAAKC,MAAO,CAACC,OAAQ,SACnB,kBAAC,IAAD,iBACOvC,EADP,CAEGwC,MAAM,QACND,OAAO,QACPE,IAAO7C,KAAKW,QACRP,EALP,CAMGP,iBAAkBG,KAAKqB,qBACvByB,SAnHI,yDAoHJnD,QAAS,kBAAM,EAAKoB,SAAS,CAAE0B,iBAAkB,QACjDM,qBAAsB,qGAGtB/C,KAAKG,MAAMuB,MAAQ1B,KAAKG,MAAMuB,KAAKG,SAAS1D,KAAI,SAAAoD,GAAQ,OACvD,kBAAC,IAAD,CACAjC,IAAOiC,EAASS,WAAWgB,KAC3B3C,SAAUkB,EAASY,SAASC,YAAY,GACxC9B,UAAWiB,EAASY,SAASC,YAAY,IAEvC,kBAAC,IAAD,CACAa,KAAMC,IACNC,KAAK,KACLC,MAAM,QACNzD,QAAS,SAAAjB,GACGA,EAAE2E,iBACF7B,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAASS,WAAW,iBAAmB,QACnD,EAAKjB,SAAS,CAAC0B,iBAAiBlB,OAG3C,EAAK+B,mBAITb,EACC,kBAAC,IAAD,CACApC,SAAUoC,EAAiBN,SAASC,YAAY,GAChD9B,UAAWmC,EAAiBN,SAASC,YAAY,GACjDC,cAAc,EACdC,QAAS,kBAAM,EAAKvB,SAAS,CAAC0B,iBAAkB,SAC9C,4BAAQlD,UAAU,UAEd,4BAAKkD,EAAiBT,WAAW,kBACjC,8CAAoBS,EAAiBT,WAAW,eAChD,yBACAzC,UAAU,QACVgD,IAAKgB,MAAQ,KAAYd,EAAiBT,WAAW,iBAAmB,QACxEQ,IAAI,gCAIR,KAEN,kBAAC,EAAD,CACEgB,mBAAoBxD,KAAKJ,MAAM4D,mBAC/B3D,iBAAkBG,KAAKgB,sB,GAjJfyC,cExBlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,Y","file":"static/js/main.6f836b44.chunk.js","sourcesContent":["var map = {\n\t\"./American Radiator Building.jpg\": 40,\n\t\"./Chrysler Building.jpg\": 41,\n\t\"./Chrysler_Building_eagle.jpg\": 42,\n\t\"./Coit Tower.jpg\": 43,\n\t\"./El Dorado.jpg\": 44,\n\t\"./Empire State Building.jpg\": 45,\n\t\"./General Electric Building.jpg\": 46,\n\t\"./Rockefeller Plaza.jpg\": 47,\n\t\"./The New Yorker.jpg\": 48,\n\t\"./Waldorf Astoria.jpg\": 49,\n\t\"./general_deco.jpg\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/American Radiator Building.c76143b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chrysler Building.ed5a98d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chrysler_Building_eagle.90794be6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Coit Tower.72d43051.jpg\";","module.exports = __webpack_public_path__ + \"static/media/El Dorado.d6033d5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Empire State Building.cec1bc5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/General Electric Building.dce12dd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rockefeller Plaza.f21469e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/The New Yorker.a3d8aaf4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Waldorf Astoria.c12963d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/general_deco.25d45fe1.jpg\";","import * as React from 'react';\nimport {PureComponent} from 'react';\n\nimport CITIES from '../data/cities.json';\n\nexport default class ControlPanel extends PureComponent {\n  _renderButton = (city, index) => {\n    return (\n      <div key={`btn-${index}`} className=\"input\">\n        <input\n          type=\"radio\"\n          name=\"city\"\n          id={`city-${index}`}\n          defaultChecked={city.city === 'New York'}\n          onClick={() => this.props.onViewportChange(city)}\n        />\n        <label htmlFor={`city-${index}`}>{city.city}</label>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"control-panel\">\n        <h3>Top Deco Cities</h3>\n        <div className=\"source-link\">\n        </div>\n        <hr />\n\n        {CITIES.map(this._renderButton)}\n      </div>\n    );\n    //{CITIES.filter(city => city.state === 'California').map(this._renderButton)}\n  }\n}","import React, {Component, useEffect} from 'react';\nimport {render} from 'react-dom';\n//import Geocoder from \"react-map-gl-geocoder\";\nimport MapGL, {Source, Layer,Marker,NavigationControl,Popup,FlyToInterpolator} from 'react-map-gl';\n\nimport ControlPanel from './components/control-panel';\nimport buildings from './data/deco_buildings.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faBiking, faTrophy} from '@fortawesome/free-solid-svg-icons';\nimport BuildingInfo from './components/BuildingInfo';\n\nimport './App.css'\n\nconst mapStyle=\"mapbox://styles/stefangouyet/ck8v4xh0j20001jm6a1wlo41g\"\n\n// useEffect(() => {\n//     const listener = (e) => {\n//       if (e.key == \"Escape\") {\n//         this.setState({\n//           builingData:null\n//         })\n//       }\n//     };\n//     window.addEventListener('keydown',listener);\n\n\n//   }, \n\n// [])\n\nclass App extends Component {\n  state = {\n    viewport: {\n      latitude: 37.7751,\n      longitude: -122.4193,\n      zoom: 11,\n      bearing: 0,\n      pitch: 0\n    },\n    popupInfo: null\n  };\n\n  componentDidMount() {\n    this.setState({\n      data: buildings\n    })\n  };\n\n  mapRef = React.createRef();\n\n  _onViewportChange = viewport =>\n    this.setState({\n      viewport: {...this.state.viewport, ...viewport}\n    });\n\n  _goToViewport = ({longitude, latitude}) => {\n    this._onViewportChange({\n      longitude,\n      latitude,\n      zoom: 11,\n      transitionInterpolator: new FlyToInterpolator({speed: 1.2}),\n      transitionDuration: 'auto'\n    });\n  };\n\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  };\n\n  _onClickMarker = building => {\n    this.setState({popupInfo: building});\n    console.log('set')\n    console.log(building)\n  };\n\n\n  _renderPopup() {\n    const {popupInfo} = this.state;\n\n    const filterBuilding =(data, building) => {\n      const features = data.features.filter(feature => {\n        return (\n            feature.properties['Building Name'] === building\n        )})\n        return {type: 'FeatureCollection', features};\n    };\n\n    const buildingData = filterBuilding(this.state.data,popupInfo);\n\n    // console.log('stefan')\n    // console.log(buildingData)\n\n    // console.log(buildingData.features[0])\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={1}\n          anchor=\"top\"\n          latitude={buildingData.features[0].geometry.coordinates[1]}\n          longitude={buildingData.features[0].geometry.coordinates[0]}\n          closeOnClick={false}\n          onClose={() => this.setState({buildingData: null})}\n        >\n          {/* <BuildingInfo info={buildingData} /> */}\n          <button>\n            <img src = './public/Chrysler_Building_eagle.jpg' alt='icon' />\n          </button>\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    const {viewport, selectedBuilding} = this.state;\n\n    return (\n      <div style={{height: '100%'}}>\n        <MapGL\n           {...viewport}\n           width=\"100vw\"\n           height=\"100vh\"\n           ref = {this.mapRef}\n           {...viewport}\n           onViewportChange={this.handleViewportChange}\n           mapStyle={mapStyle}\n           onClick={() => this.setState({ selectedBuilding: null })}\n           mapboxApiAccessToken={'pk.eyJ1Ijoic3RlZmFuZ291eWV0IiwiYSI6ImNrNzlqbm8ycTA5bXUzbXFyMWZreGMxb24ifQ.hGYafiv-Xt5DXaUZgz4M8Q'}\n          \n        >\n          {this.state.data && this.state.data.features.map(building =>\n            <Marker\n            key = {building.properties.year}\n            latitude={building.geometry.coordinates[1]}\n            longitude={building.geometry.coordinates[0]}\n            >\n              <FontAwesomeIcon \n              icon={faTrophy} \n              size='1x' \n              color='black' \n              onClick={e => {//this._onClickMarker(building.properties['Building Name'])}\n                          e.preventDefault();\n                          console.log(building)\n                          console.log(building.properties['Building Name'] + '.jpg')\n                          this.setState({selectedBuilding:building})\n          }}\n              />\n              {this._renderPopup()}\n            </Marker>\n          )}\n\n          {selectedBuilding ? (\n            <Popup\n            latitude={selectedBuilding.geometry.coordinates[1]}\n            longitude={selectedBuilding.geometry.coordinates[0]}\n            closeOnClick={false}\n            onClose={() => this.setState({selectedBuilding: null})}>\n              <button className='button'>\n                  {/* <img src = '../public/Chrysler_Building_eagle.jpg' alt='icon' /> */}\n                  <h1>{selectedBuilding.properties['Building Name']}</h1>\n                  <h3>Constructed in {selectedBuilding.properties['Year Built']}</h3>\n                  <img \n                  className='photo' \n                  src={require('./images/'+selectedBuilding.properties['Building Name'] + '.jpg')} \n                  alt='./images/general_deco.jpg'  />\n                  \n              </button>\n            </Popup>\n          ) : null\n        }\n        <ControlPanel\n          containerComponent={this.props.containerComponent}\n          onViewportChange={this._goToViewport}\n        />\n        </MapGL>\n      </div>\n    );\n  }\n}\n\nexport default App;","import * as React from 'react';\nimport {PureComponent} from 'react';\n\nexport default class BuildingInfo extends PureComponent {\n  render() {\n    const {info} = this.props;\n    const displayName = `${info.city}, ${info.state}`;\n\n    console.log('working')\n\n    return (\n      <div>\n        <div>\n          {displayName} |{' '}\n          <a\n            target=\"_new\"\n            href={`http://en.wikipedia.org/w/index.php?title=Special:Search&search=${displayName}`}\n          >\n            Wikipedia\n          </a>\n        </div>\n        <img width={240} src={info.image} />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}